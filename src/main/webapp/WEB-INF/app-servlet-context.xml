<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd">
		
	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	<!-- Activates various annotations to be detected in bean classes -->
	<context:annotation-config />
    <context:component-scan base-package="com.huaxinshengyuan.socknow.controller"/>
	<!-- Configures the Spring MVC @Controller programming model -->
	<mvc:annotation-driven/>
	<mvc:view-controller path="/" view-name="home"/> 	
    <mvc:view-controller path="/explore/dashboard" view-name="/explore/dashboard"/> 
     <mvc:view-controller path="/explore/tagcloud" view-name="/explore/tagcloud"/> 
	<mvc:view-controller path="/login/login" />
	<mvc:view-controller path="/login/logout" />
	<mvc:view-controller path="/login/logoutSuccess" />  
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<!-- <mvc:resources mapping="/resources/**" location="/resources/" />-->
	
	<mvc:resources mapping="/resources/**" location="/resources/, classpath:/META-INF/web-resources/" />
	<!-- Configures a handler for serving static resources by forwarding to the Servlet container's default Servlet. -->
	<mvc:default-servlet-handler />

	
	<!-- Maps view names to Tiles Definitions with support for partial re-rendering 
	<bean id="viewResolver" class="org.springframework.web.servlet.view.tiles2.TilesViewResolver">
	</bean>
-->
		<!-- Maps view names to Tiles Definitions with support for partial re-rendering -->
	<bean id="viewResolver" class="org.springframework.js.ajax.AjaxUrlBasedViewResolver">
		<property name="viewClass" value="org.springframework.webflow.mvc.view.FlowAjaxTilesView"/>
	</bean>
		
	<!-- Initializes the Apache Tiles CompositeView system -->
	<bean id="tilesConfigurer" class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
		<property name="definitions">
			<value>
				/WEB-INF/**/views.xml
			</value>
		</property>
	</bean>
	<!--  <bean class="org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter" />-->
	<bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter" />
	<import resource="app-webflow.xml" />
    <import resource="i18n.xml" />
        	<!--
		- This bean resolves specific types of exceptions to corresponding logical 
		- view names for error views. The default behaviour of DispatcherServlet 
		- is to propagate all exceptions to the servlet container: this will happen 
		- here with all other types of exceptions.
	-->
	<!--  
	  <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="defaultErrorView" value="errors/uncaughtException" />
	</bean>
	-->
    

   <bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
    <!-- one of the properties available; the maximum file size in bytes -->
    <property name="maxUploadSize" value="50000000"/>
  </bean>

</beans>
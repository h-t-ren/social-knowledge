<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.huaxinshengyuan</groupId>
	<artifactId>knowledge-social</artifactId>
	<packaging>war</packaging>
	<version>0.0.1</version>
	<name>knowledge management in small social network</name>
	<url>http://www.huaxingshengyuan.com</url>
	<inceptionYear>2012</inceptionYear>
	<developers>
		<developer>
			<id>hongtao</id>
			<name>Hongtao Ren</name>
			<email>hongtao.ren@gmail.com</email>
			<organization>huaxingshengyuan</organization>
			<roles>
				<role>Developer</role>
			</roles>
			<timezone>+1</timezone>
		</developer>
	</developers>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<java.version>1.6</java.version>
		<spring.core.version>3.1.1.RELEASE</spring.core.version>
		<spring.security-version>3.1.0.RELEASE</spring.security-version>
		<springwebflow-version>2.3.1.RELEASE</springwebflow-version>
		<!-- <spring.data.neo4j.version>2.1.0.M1</spring.data.neo4j.version> -->
		<spring.data.neo4j.version> 2.1.0.BUILD-SNAPSHOT</spring.data.neo4j.version>
		<spring.ws.version>2.1.0.RC1</spring.ws.version>
		<neo4j.kernel.version>1.7</neo4j.kernel.version>
		<neo4j.cypher.version>1.7</neo4j.cypher.version>
		<neo4j.cypher.dsl.version>1.7</neo4j.cypher.dsl.version>
		<hibernate.validator.version>4.1.0.Final</hibernate.validator.version>
		<scala.library.version>2.9.0-1</scala.library.version>
		<cglib.version>2.2</cglib.version>
		<aspectj.version>1.6.10</aspectj.version>
		<slf4j.version>1.6.1</slf4j.version>
		<log4j.version>1.2.14</log4j.version>
		<javax.servlet-api.version>2.5</javax.servlet-api.version>
		<javax.jstl-taglibs.version>1.1.2</javax.jstl-taglibs.version>
		<jackson.version>1.9.3</jackson.version>
		<!-- Testing -->
		<mockito.version>1.8.5</mockito.version>
		<junit.version>4.8.2</junit.version>
		<!-- Plugins -->
		<maven.compiler.plugin.version>2.3.2</maven.compiler.plugin.version>
		<maven.apt.plugin.version>1.0</maven.apt.plugin.version>
	</properties>

	<dependencies>
		<!-- Spring Core -->
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-core</artifactId>
			<version>${spring.core.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>${spring.core.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aop</artifactId>
			<version>${spring.core.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-tx</artifactId>
			<version>${spring.core.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-webmvc</artifactId>
			<version>${spring.core.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-jdbc</artifactId>
			<version>${spring.core.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-oxm</artifactId>
			<version>${spring.core.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-aspects</artifactId>
			<version>${spring.core.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>com.sun.xml.bind</groupId>
			<artifactId>jaxb-impl</artifactId>
			<version>2.1.5</version>
			<scope>runtime</scope>
		</dependency>





		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-webflow</artifactId>
			<version>${springwebflow-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.webflow</groupId>
			<artifactId>spring-js</artifactId>
			<version>${springwebflow-version}</version>
		</dependency>



		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-core</artifactId>
			<version>${spring.security-version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-config</artifactId>
			<version>${spring.security-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-web</artifactId>
			<version>${spring.security-version}</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>

		<dependency>
			<groupId>org.springframework.security</groupId>
			<artifactId>spring-security-taglibs</artifactId>
			<version>${spring.security-version}</version>
		</dependency>





		<!-- A seamless aspect-oriented extension to the Java programming language -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>${aspectj.version}</version>
		</dependency>



		<!-- Cglib is a powerful, high performance and quality Code Generation 
			Library, It is used to extend JAVA classes and implements interfaces at runtime. -->
		<dependency>
			<groupId>cglib</groupId>
			<artifactId>cglib-nodep</artifactId>
			<version>${cglib.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- The JavaServer Pages Standard Tag Library (JSTL) encapsulates, as 
			simple tags, core functionality common to many JSP applications. -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
			<version>${javax.jstl-taglibs.version}</version>
		</dependency>
		<dependency>
			<groupId>taglibs</groupId>
			<artifactId>standard</artifactId>
			<version>${javax.jstl-taglibs.version}</version>
		</dependency>

		<!-- Data Mapper package is a high-performance data binding package built 
			on Jackson JSON processor -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-mapper-asl</artifactId>
			<version>${jackson.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- Jackson is a high-performance JSON processor (parser, generator) -->
		<dependency>
			<groupId>org.codehaus.jackson</groupId>
			<artifactId>jackson-core-asl</artifactId>
			<version>${jackson.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache</artifactId>
			<version>1.6.2</version>
		</dependency>

		<!-- Logger -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>${log4j.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- The Simple Logging Facade for Java or (SLF4J) serves as a simple facade 
			or abstraction for various logging frameworks, e.g. java.util.logging, log4j 
			and logback, allowing the end user to plug in the desired logging framework 
			at deployment time. -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>${slf4j.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>${slf4j.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
			<version>${slf4j.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- Spring Data Neo4j -->
		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-neo4j</artifactId>
			<version>${spring.data.neo4j.version}</version>
			<type>jar</type>
			<scope>compile</scope>
			<exclusions>
				<exclusion>
					<artifactId>neo4j</artifactId>
					<groupId>org.neo4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>neo4j-cypher-dsl</artifactId>
					<groupId>org.neo4j</groupId>
				</exclusion>
				<exclusion>
					<artifactId>org.hibernate.javax.persistence</artifactId>
					<groupId>hibernate-jpa-2.0-api</groupId>
				</exclusion>
			</exclusions>
		</dependency>



		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-neo4j-rest</artifactId>
			<version>${spring.data.neo4j.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>


		<dependency>
			<groupId>org.springframework.data</groupId>
			<artifactId>spring-data-neo4j-tx</artifactId>
			<version>${spring.data.neo4j.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-kernel</artifactId>
			<version>${neo4j.kernel.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-cypher</artifactId>
			<version>${neo4j.cypher.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.neo4j</groupId>
			<artifactId>neo4j-cypher-dsl</artifactId>
			<version>${neo4j.cypher.dsl.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.library.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>

		<!-- Hibernate Validator -->
		<dependency>
			<groupId>org.hibernate</groupId>
			<artifactId>hibernate-validator</artifactId>
			<version>${hibernate.validator.version}</version>
		</dependency>

		<!-- Javax Servlet. This needs to be included for runtime only! -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>${javax.servlet-api.version}</version>
			<scope>provided</scope>
		</dependency>


		<!-- Apache Tiles -->
		<dependency>
			<groupId>org.apache.tiles</groupId>
			<artifactId>tiles-jsp</artifactId>
			<version>2.1.3</version>
			<exclusions>
				<!-- Exclude Commons Logging in favor of SLF4j -->
				<exclusion>
					<groupId>commons-logging</groupId>
					<artifactId>commons-logging-api</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- File upload -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.2.1</version>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>1.4</version>
		</dependency>



		<!-- Testing dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<version>${spring.core.version}</version>
			<type>jar</type>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<configuration>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-maven-plugin</artifactId>
				<version>7.1.2.v20100523</version>
				<configuration>
					<webAppConfig>
						<contextPath>/</contextPath>
					</webAppConfig>
					<!--scanIntervalSeconds>1</scanIntervalSeconds -->
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.5</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
				<executions>
					<execution>
						<phase>generate-sources</phase>
						<goals>
							<goal>resources</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		
		</plugins>

		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.tomcat.maven</groupId>
					<artifactId>tomcat7-maven-plugin</artifactId>
					<version>2.0-SNAPSHOT</version>
					<configuration>
						<path>/know</path>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>


	</build>

	<repositories>


		<!-- For developing against latest Spring milestones -->
		<repository>
			<id>Sun</id>
			<url>http://download.java.net/maven/2</url>
		</repository>
		<repository>
			<id>spring-maven-release</id>
			<name>Spring Maven Release Repository</name>
			<url>http://maven.springframework.org/release</url>
		</repository>
		<repository>
			<id>spring-maven-snapshot</id>
			<name>Spring Maven Snapshot Repository</name>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<url>http://maven.springframework.org/snapshot</url>
		</repository>
		<repository>
			<id>spring-maven-milestone</id>
			<name>Spring Maven Milestone Repository</name>
			<url>http://maven.springframework.org/milestone</url>
		</repository>
		<repository>
			<id>neo4j-release-repository</id>
			<name>Neo4j Maven 2 release repository</name>
			<url>http://m2.neo4j.org/releases</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>neo4j-snapshot-repository</id>
			<name>Neo4j Maven 2 snapshot repository</name>
			<url>http://m2.neo4j.org/snapshots</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
			<releases>
				<enabled>false</enabled>
			</releases>
		</repository>
		<repository>
			<id>jboss-public-repo</id>
			<url>http://repository.jboss.org/maven2/</url>
			<name>JBoss public available repo</name>
		</repository>
	</repositories>

	<pluginRepositories>

		<!-- Repo for maven-copy-plugin <pluginRepository> <id>evgeny-goldin.org</id> 
			<name>Evgeny Goldin Repository</name> <url>http://evgeny-goldin.org/artifactory/repo/</url> 
			</pluginRepository> -->

	</pluginRepositories>
</project>
